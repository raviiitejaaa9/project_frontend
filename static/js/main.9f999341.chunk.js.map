{"version":3,"sources":["assets/images/profile-icon-design-free-vector.jpg","components/Home/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavbarComponent/index.js","components/Dashboard/index.js","components/Profile/index.js","components/ProtectedRoute/index.js","components/NotFound/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Home","navigate","useNavigate","useEffect","Cookies","get","React","createElement","className","onClick","onHomeSignup","onHomeLogin","SignupForm","submitErrorMessage","setSubmitErrorMessage","useState","submitSuccessMessage","setSubmitSuccessMessage","showPassword","setShowPassword","formData","setFormData","firstName","lastName","mobileNumber","email","password","errors","setErrors","validateName","name","test","trim","validateNumber","number","_number$trim","length","validateEmail","validatePassword","enteredPassword","hasUpperCase","hasLowerCase","hasNumber","hasSpecialChar","onBlur","e","value","target","reqValue","onClickSignupLogin","onChange","onSubmitSignupForm","async","event","preventDefault","validateForm","reqErrors","Object","values","some","error","console","log","userSignupData","toString","signupOptions","mode","method","headers","body","JSON","stringify","signupResponse","fetch","ok","signupJson","json","userId","userData","id","userProfileData","set","userProfileStringifiedData","localStorage","setItem","onSuccessfulRegister","message","onSubmit","htmlFor","type","placeholder","required","LoginForm","userEmail","setUserEmail","userPassword","setUserPassword","errorMessage","setErrorMessage","userInfo","loginOptions","response","jsonData","onSuccessfulLogin","onBlurEmail","onBlurPassword","onClickLoginSignup","NavbarComponent","location","useLocation","isActive","path","pathname","onClickNavLogo","href","onClickLogout","remove","removeItem","Dashboard","username","getItem","src","profileImg","alt","Profile","parsedUserInfo","parse","originalNumber","numberLength","zeros","repeat","ProtectedRoute","_ref","element","isAuthenticated","setIsAuthenticated","NotFound","App","BrowserRouter","Routes","Route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9f999341.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-icon-design-free-vector.e496d7cc.jpg\";","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const jwtToken = Cookies.get(\"jwt_token\"); \r\n        if (jwtToken) {\r\n            navigate(\"/dashboard\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    const onHomeSignup = () => {\r\n        navigate(\"/signup\");\r\n    }\r\n\r\n    const onHomeLogin = () => {\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-head\">React Authentication App</h1>\r\n            <h2 className=\"guest-greeting\">Welcome</h2>\r\n            \r\n            <div className=\"signup-login-container\">\r\n                <div className=\"home-btns-container\">\r\n                    <h3 className=\"home-btns-heading\">Are you a New User?</h3>\r\n                    <button className=\"home-btn\" onClick={onHomeSignup}>Register</button>\r\n                </div>\r\n                <div className=\"home-btns-container\">\r\n                    <h3 className=\"home-btns-heading\">Already a User?</h3>\r\n                    <button className=\"home-btn\" onClick={onHomeLogin}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./index.css\"\r\n\r\nconst SignupForm = () => {\r\n    const [submitErrorMessage, setSubmitErrorMessage] = useState(\"\");\r\n    const [submitSuccessMessage, setSubmitSuccessMessage] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mobileNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mobileNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const jwtToken = Cookies.get(\"jwt_token\");\r\n        if (jwtToken) {\r\n            navigate(\"/dashboard\");\r\n        }\r\n    });\r\n\r\n    const validateName = (name) => {\r\n        const isValidInput = /^[A-Za-z\\s]+$/.test(name.trim());\r\n        if (!isValidInput) return \"*only Alphabets please\";\r\n        return \"\";\r\n    }\r\n    const validateNumber = (number) => {\r\n        if (number.trim()?.length !== 10) return \"*Only 10 digits please\";\r\n        const isValidInput = /^[0-9]+$/.test(number.trim());\r\n        if (!isValidInput) return \"*only Numbers please\";\r\n        return \"\";\r\n    }\r\n    const validateEmail = (email) => {\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        const isValidInput = emailPattern.test(email.trim());\r\n        if (!isValidInput) return \"*Please Enter a Valid Email\";\r\n        return \"\";\r\n    }\r\n    const validatePassword = (password) => {\r\n        const enteredPassword = password.trim();\r\n        const hasUpperCase = /[A-Z]/.test(enteredPassword);\r\n        const hasLowerCase = /[a-z]/.test(enteredPassword);\r\n        const hasNumber = /[0-9]/.test(enteredPassword);\r\n        const hasSpecialChar = /[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\-]/.test(enteredPassword);\r\n        const hasLength = enteredPassword.length >= 5;\r\n\r\n        if (!(hasLength && hasLowerCase && hasUpperCase && hasSpecialChar && hasNumber)) return \"*password should have an UpperCase, a LowerCase, a Number, a SpecialCharacter and minimum length 5\";\r\n        return \"\";\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const { name, value } = e?.target;\r\n        let reqValue = \"\";\r\n        switch (name) {\r\n            case \"firstName\":\r\n                reqValue = validateName(value);\r\n                break;\r\n            case \"lastName\":\r\n                reqValue = validateName(value);\r\n                break;\r\n            case \"mobileNumber\":\r\n                reqValue = validateNumber(value);\r\n                break;\r\n            case \"email\":\r\n                reqValue = validateEmail(value);\r\n                break;\r\n            case \"password\":\r\n                reqValue = validatePassword(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors({\r\n            ...errors,\r\n            [name]: reqValue,\r\n        })\r\n    }\r\n\r\n    // onClickSignupLogin \r\n    const onClickSignupLogin = () => {\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const { name, value } = e?.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value.trim(),\r\n        });\r\n        setErrors({\r\n            ...errors,\r\n            [name]: \"\",\r\n        })\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const reqErrors = {\r\n            firstName: validateName(formData?.firstName),\r\n            lastName: validateName(formData?.lastName),\r\n            mobileNumber: validateNumber(formData?.mobileNumber),\r\n            email: validateEmail(formData?.email),\r\n            password: validatePassword(formData?.password),\r\n        }\r\n        setErrors({ ...errors });\r\n        const hasErrors = Object.values(reqErrors).some(error => error !== \"\");\r\n\r\n        return !hasErrors;\r\n    }\r\n\r\n    const onSuccessfulRegister = async (id, name, userProfileData) => {\r\n        Cookies.set(\"jwt_token\", `${id}`)\r\n        const userProfileStringifiedData = JSON.stringify(userProfileData)\r\n\r\n        await localStorage.setItem(\"username\", name);\r\n        await localStorage.setItem(\"userProfileData\", userProfileStringifiedData)\r\n        navigate(\"/dashboard\");\r\n    }\r\n\r\n    // what Happens on Submit Form \r\n    const onSubmitSignupForm = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!validateForm()) return;\r\n\r\n        console.log(\"signup Triggered\");\r\n\r\n        const signupApiUrl = \"https://quasar-colossal-wing.glitch.me/api/auth/signup\";\r\n\r\n        const userSignupData = { ...formData, mobileNumber: formData?.mobileNumber.toString() }\r\n\r\n        const signupOptions = {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(userSignupData),\r\n        }\r\n\r\n        try {\r\n            const signupResponse = await fetch(signupApiUrl, signupOptions);\r\n            console.log(\"signupResponse\", signupResponse);\r\n            if (signupResponse.ok) {\r\n                setSubmitErrorMessage(\"\");\r\n                const signupJson = await signupResponse.json();\r\n                const { userId, userData } = signupJson;\r\n                const { firstName, lastName } = userData;\r\n\r\n                const userName = firstName + \" \" + lastName;\r\n                onSuccessfulRegister(userId, userName, userData);\r\n                // const reqMsg = `${message}. You can Login now.`;\r\n                // setSubmitSuccessMessage(reqMsg);\r\n            } else {\r\n                setSubmitSuccessMessage(\"\");\r\n                const signupJson = await signupResponse.json();\r\n                const { message } = signupJson;\r\n                setSubmitErrorMessage(message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An error occurred during signup:\", error);\r\n            setSubmitErrorMessage(`An error occurred: ${error.message}`);\r\n        }\r\n    }\r\n\r\n\r\n    const signupForm = () => {\r\n        return (\r\n            <form className=\"signup-form\" onSubmit={onSubmitSignupForm} >\r\n                <div className=\"signup-input-el-container\" >\r\n                    <label className=\"signup-label-el\" htmlFor=\"firstname\"> First Name : </label>\r\n                    <input onBlur={onBlur} onChange={onChange}\r\n                        type=\"input\" className=\"signup-input-el\" id=\"firstname\" name=\"firstName\"\r\n                        placeholder=\"Enter your First Name\" required />\r\n                </div>\r\n                {errors?.firstName && <p className=\"signup-error-msg\" > {errors?.firstName}  </p>}\r\n\r\n                <div className=\"signup-input-el-container\" >\r\n                    <label className=\"signup-label-el\" htmlFor=\"lastname\"> Last Name : </label>\r\n                    <input onBlur={onBlur} onChange={onChange}\r\n                        type=\"input\" className=\"signup-input-el\" id=\"lastname\" name=\"lastName\"\r\n                        placeholder=\"Enter your Last Name\" required />\r\n                </div>\r\n                {errors?.lastName && <p className=\"signup-error-msg\" > {errors?.lastName}  </p>}\r\n\r\n                <div className=\"signup-input-el-container\" >\r\n                    <label className=\"signup-label-el\" htmlFor=\"mobilenumber\"> Mobile Number  : </label>\r\n                    <input onBlur={onBlur} onChange={onChange}\r\n                        type=\"tel\" className=\"signup-input-el\" id=\"mobilenumber\" name=\"mobileNumber\"\r\n                        placeholder=\"Enter your Mobile Number\" required />\r\n                </div>\r\n                {errors?.mobileNumber && <p className=\"signup-error-msg\" > {errors?.mobileNumber}  </p>}\r\n\r\n                <div className=\"signup-input-el-container\" >\r\n                    <label className=\"signup-label-el\" htmlFor=\"email\"> Email  : </label>\r\n                    <input onBlur={onBlur} onChange={onChange}\r\n                        type=\"email\" className=\"signup-input-el\" id=\"email\" name=\"email\"\r\n                        placeholder=\"Enter your Email\" required />\r\n                </div>\r\n                {errors?.email && <p className=\"signup-error-msg\" > {errors?.email}  </p>}\r\n\r\n                <div className=\"signup-input-el-container\">\r\n                    <label className=\"signup-label-el\" htmlFor=\"password\">Password:</label>\r\n                    <div className=\"password-toggle-container\">\r\n                        <input\r\n                            onBlur={onBlur}\r\n                            onChange={onChange}\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className=\"signup-input-el password-input\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter your Password\"\r\n                            required\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"show-password-btn\"\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                        >\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {errors?.password && <p className=\"signup-error-msg\" > {errors?.password}  </p>}\r\n\r\n                <button className=\"signup-button\" type=\"submit\" > Register  </button>\r\n\r\n                <p className=\"signup-error-msg\" > {submitErrorMessage} </p>\r\n\r\n                <p className=\"signup-error-msg signup-success-msg\" > {submitSuccessMessage} </p>\r\n\r\n                <p className=\"login-signup\" onClick={onClickSignupLogin} > Already Registered. Do you Want to Login ?  </p>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-page\" >\r\n            <h1 className=\"signup-head\" > React Authentication App </h1>\r\n            {signupForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupForm","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./index.css\";\r\n\r\nconst LoginForm = () => {\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n    const [userPassword, setUserPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const jwtToken = Cookies.get(\"jwt_token\");\r\n        if (jwtToken) {\r\n            navigate(\"/dashboard\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    const onSuccessfulLogin = (id, name, userProfileData) => {\r\n        Cookies.set(\"jwt_token\", `${id}`);\r\n        localStorage.setItem(\"username\", name);\r\n        localStorage.setItem(\"userProfileData\", JSON.stringify(userProfileData));\r\n        navigate(\"/dashboard\");\r\n    };\r\n\r\n    const onSubmitLogin = async (event) => {\r\n        event.preventDefault();\r\n        setErrorMessage(\"\");\r\n\r\n        if (!userEmail || !userPassword) {\r\n            setErrorMessage(\"Both email and password are required.\");\r\n            return;\r\n        }\r\n\r\n        const userInfo = { userEmail, userPassword };\r\n        const loginUrl = \"https://quasar-colossal-wing.glitch.me/api/auth/login\";\r\n        const loginOptions = {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(userInfo),\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(loginUrl, loginOptions);\r\n            if (response.ok) {\r\n                const jsonData = await response.json();\r\n                const { userId, userData } = jsonData;\r\n                const { firstName, lastName } = userData;\r\n                const userName = firstName + \" \" + lastName;\r\n                onSuccessfulLogin(userId, userName, userData);\r\n            } else {\r\n                const jsonData = await response.json();\r\n                setErrorMessage(jsonData.message);\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(\"Unable to connect. Please try again later.\");\r\n        }\r\n    };\r\n\r\n    const onBlurEmail = () => {\r\n        if (!userEmail) setErrorMessage(\"*Email should not be empty\");\r\n    };\r\n\r\n    const onBlurPassword = () => {\r\n        if (!userPassword) setErrorMessage(\"*Please Enter your Password\");\r\n    };\r\n\r\n    const onChangeEmail = (event) => setUserEmail(event.target.value.trim());\r\n    const onChangePassword = (event) => setUserPassword(event.target.value.trim());\r\n    const onClickLoginSignup = () => navigate(\"/\");\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h1 className=\"login-head\">React Authentication App</h1>\r\n            <form className=\"login-form\" onSubmit={onSubmitLogin}>\r\n                <div className=\"login-input-el-container\">\r\n                    <label htmlFor=\"login-email\" className=\"login-label-el\">Email:</label>\r\n                    <input\r\n                        id=\"login-email\"\r\n                        onBlur={onBlurEmail}\r\n                        onChange={onChangeEmail}\r\n                        value={userEmail}\r\n                        type=\"email\"\r\n                        className=\"login-input-el\"\r\n                        placeholder=\"Enter your Registered Email\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-el-container\">\r\n                    <label htmlFor=\"login-password\" className=\"login-label-el\">Password:</label>\r\n                    <div className=\"password-toggle-container\">\r\n                        <input\r\n                            id=\"login-password\"\r\n                            onBlur={onBlurPassword}\r\n                            onChange={onChangePassword}\r\n                            value={userPassword}\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className=\"login-input-el password-input\"\r\n                            placeholder=\"Enter your Password\"\r\n                            required\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"show-password-btn\"\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                        >\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <button className=\"login-button\" type=\"submit\">Login</button>\r\n                <p className=\"error-msg\">{errorMessage}</p>\r\n                <p className=\"login-signup\" onClick={onClickLoginSignup}>\r\n                    Not Registered Yet? Do you Want to Register?\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nconst NavbarComponent = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const onClickLogout = () => {\r\n        Cookies.remove('jwt_token');\r\n        navigate('/login');\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('userProfileData');\r\n    };\r\n\r\n    const onClickNavLogo = () => {\r\n        navigate('/dashboard');\r\n    };\r\n\r\n    const isActive = (path) => {\r\n        return location.pathname === path ? 'active' : '';\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"brand\" onClick={onClickNavLogo}>\r\n                React Authentication App\r\n            </div>\r\n            <div className=\"nav-links\">\r\n                <a href=\"/dashboard\" className={isActive('/dashboard')}>\r\n                    Dashboard\r\n                </a>\r\n                <a href=\"/profile\" className={isActive('/profile')}>\r\n                    Profile\r\n                </a>\r\n            </div>\r\n            <button className=\"logout-btn\" onClick={onClickLogout}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","import React from \"react\";\r\nimport NavbarComponent from \"../NavbarComponent\";\r\nimport profileImg from \"../../assets/images/profile-icon-design-free-vector.jpg\"\r\nimport \"./index.css\"\r\n\r\nconst Dashboard = () => {\r\n\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const dashboardSec = () => (\r\n        <div className=\"dashboard-sec\" > \r\n            <h1 className=\"dashboard-head\"> Welcome to the Dashboard {username} </h1>\r\n            <img src = {profileImg}\r\n                 alt = \"profile-pic\" className=\"profile-img\" \r\n            />\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <div className=\"dashboard-container\" >\r\n             <NavbarComponent/>\r\n             {dashboardSec()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from \"react\";\r\nimport NavbarComponent from \"../NavbarComponent\";\r\nimport profileImg from \"../../assets/images/profile-icon-design-free-vector.jpg\";\r\nimport \"./index.css\";\r\n\r\nconst Profile = () => {\r\n    const userInfo = localStorage.getItem(\"userProfileData\");\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const parsedUserInfo = JSON.parse(userInfo);\r\n    let originalNumber;\r\n    const { email, mobileNumber } = parsedUserInfo;\r\n    const numberLength = mobileNumber.toString().length;\r\n\r\n    if (numberLength < 10) {\r\n        const deficit = 10 - numberLength;\r\n        const zeros = \"0\".repeat(deficit);\r\n        originalNumber = `${zeros}${mobileNumber.toString()}`;\r\n    } else {\r\n        originalNumber = mobileNumber;\r\n    }\r\n\r\n    const profileSec = () => (\r\n        <div className=\"profile-sec\">\r\n            <img\r\n                src={profileImg}\r\n                alt=\"profile-pic\"\r\n                className=\"profile-img\"\r\n            />\r\n            <div className=\"profile-details-sec\">\r\n                <h1 className=\"profile-head-el\">\r\n                    <span className=\"profile-span-el\">Username:</span> {username}\r\n                </h1>\r\n                <h1 className=\"profile-head-el\">\r\n                    <span className=\"profile-span-el\">Mobile Number:</span> {originalNumber}\r\n                </h1>\r\n                <h1 className=\"profile-head-el\">\r\n                    <span className=\"profile-span-el\">Email:</span> {email}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <NavbarComponent />\r\n            {profileSec()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { useEffect, useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ element }) => {\r\n    const navigate = useNavigate();\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const jwtToken = Cookies.get(\"jwt_token\");\r\n        \r\n        if (jwtToken) {\r\n            setIsAuthenticated(true);\r\n        } else {\r\n            navigate(\"/\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    if (!isAuthenticated) {\r\n        return null;\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport \"./index.css\"; \r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <h1 className=\"not-found-heading\">404 - Not Found</h1>\r\n      <p className=\"not-found-message\">The page you are looking for does not exist.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport SignupForm from \"./components/SignupForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport NotFound from \"./components/NotFound\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App-container\">\n      <BrowserRouter >\n      <Routes>\n        <Route path = \"/\" element = {<Home/>}/>\n        <Route path = \"/signup\" element = {<SignupForm/>} />\n        <Route path = \"/login\" element = {<LoginForm/>} />\n        <Route path = \"/dashboard\" element = {<ProtectedRoute element={<Dashboard/>}/>} />\n        <Route path = \"/profile\" element = {<ProtectedRoute element={<Profile/>}/>}  />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}